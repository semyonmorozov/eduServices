//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.Lesson_2.Client.IWarehouseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Services.Lesson_2.Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWarehouseService.IWarehouseService")]
    public interface IWarehouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Get", ReplyAction="http://tempuri.org/IWarehouseService/GetResponse")]
        Services.Lesson_2.Client.IWarehouseService.Product Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Get", ReplyAction="http://tempuri.org/IWarehouseService/GetResponse")]
        System.Threading.Tasks.Task<Services.Lesson_2.Client.IWarehouseService.Product> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetAll", ReplyAction="http://tempuri.org/IWarehouseService/GetAllResponse")]
        Services.Lesson_2.Client.IWarehouseService.Product[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetAll", ReplyAction="http://tempuri.org/IWarehouseService/GetAllResponse")]
        System.Threading.Tasks.Task<Services.Lesson_2.Client.IWarehouseService.Product[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Add", ReplyAction="http://tempuri.org/IWarehouseService/AddResponse")]
        void Add(Services.Lesson_2.Client.IWarehouseService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Add", ReplyAction="http://tempuri.org/IWarehouseService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(Services.Lesson_2.Client.IWarehouseService.Product product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarehouseServiceChannel : Services.Lesson_2.Client.IWarehouseService.IWarehouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarehouseServiceClient : System.ServiceModel.ClientBase<Services.Lesson_2.Client.IWarehouseService.IWarehouseService>, Services.Lesson_2.Client.IWarehouseService.IWarehouseService {
        
        public WarehouseServiceClient() {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Services.Lesson_2.Client.IWarehouseService.Product Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<Services.Lesson_2.Client.IWarehouseService.Product> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public Services.Lesson_2.Client.IWarehouseService.Product[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Services.Lesson_2.Client.IWarehouseService.Product[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Add(Services.Lesson_2.Client.IWarehouseService.Product product) {
            base.Channel.Add(product);
        }
        
        public System.Threading.Tasks.Task AddAsync(Services.Lesson_2.Client.IWarehouseService.Product product) {
            return base.Channel.AddAsync(product);
        }
    }
}
