//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryClient.LibraryServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/LibraryService")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookType {
            get {
                return this.BookTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookTypeField, value) != true)) {
                    this.BookTypeField = value;
                    this.RaisePropertyChanged("BookType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryServiceReference.ILibraryService", CallbackContract=typeof(LibraryClient.LibraryServiceReference.ILibraryServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/Authorize", ReplyAction="http://tempuri.org/ILibraryService/AuthorizeResponse")]
        void Authorize(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/Authorize", ReplyAction="http://tempuri.org/ILibraryService/AuthorizeResponse")]
        System.Threading.Tasks.Task AuthorizeAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddBook", ReplyAction="http://tempuri.org/ILibraryService/AddBookResponse")]
        void AddBook(LibraryClient.LibraryServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddBook", ReplyAction="http://tempuri.org/ILibraryService/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(LibraryClient.LibraryServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBookInfoById", ReplyAction="http://tempuri.org/ILibraryService/GetBookInfoByIdResponse")]
        LibraryClient.LibraryServiceReference.Book GetBookInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBookInfoById", ReplyAction="http://tempuri.org/ILibraryService/GetBookInfoByIdResponse")]
        System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book> GetBookInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBooksInfoByAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetBooksInfoByAuthorResponse")]
        LibraryClient.LibraryServiceReference.Book[] GetBooksInfoByAuthor(string author);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBooksInfoByAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetBooksInfoByAuthorResponse")]
        System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book[]> GetBooksInfoByAuthorAsync(string author);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBook", ReplyAction="http://tempuri.org/ILibraryService/GetBookResponse")]
        LibraryClient.LibraryServiceReference.Book GetBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/GetBook", ReplyAction="http://tempuri.org/ILibraryService/GetBookResponse")]
        System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book> GetBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/ReturnBook", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookResponse")]
        void ReturnBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/ReturnBook", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookResponse")]
        System.Threading.Tasks.Task ReturnBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/Exchange", ReplyAction="http://tempuri.org/ILibraryService/ExchangeResponse")]
        bool Exchange();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/ILibraryService/Exchange", ReplyAction="http://tempuri.org/ILibraryService/ExchangeResponse")]
        System.Threading.Tasks.Task<bool> ExchangeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/ILibraryService/ExtendReservation")]
        void ExtendReservation(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/ILibraryService/ExtendReservation")]
        System.Threading.Tasks.Task ExtendReservationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ILibraryService/Exit")]
        void Exit();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ILibraryService/Exit")]
        System.Threading.Tasks.Task ExitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILibraryService/OnCallback")]
        void OnCallback(int[] overdueBooks);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : LibraryClient.LibraryServiceReference.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.DuplexClientBase<LibraryClient.LibraryServiceReference.ILibraryService>, LibraryClient.LibraryServiceReference.ILibraryService {
        
        public LibraryServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LibraryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LibraryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Authorize(string login) {
            base.Channel.Authorize(login);
        }
        
        public System.Threading.Tasks.Task AuthorizeAsync(string login) {
            return base.Channel.AuthorizeAsync(login);
        }
        
        public void AddBook(LibraryClient.LibraryServiceReference.Book book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(LibraryClient.LibraryServiceReference.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public LibraryClient.LibraryServiceReference.Book GetBookInfoById(int id) {
            return base.Channel.GetBookInfoById(id);
        }
        
        public System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book> GetBookInfoByIdAsync(int id) {
            return base.Channel.GetBookInfoByIdAsync(id);
        }
        
        public LibraryClient.LibraryServiceReference.Book[] GetBooksInfoByAuthor(string author) {
            return base.Channel.GetBooksInfoByAuthor(author);
        }
        
        public System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book[]> GetBooksInfoByAuthorAsync(string author) {
            return base.Channel.GetBooksInfoByAuthorAsync(author);
        }
        
        public LibraryClient.LibraryServiceReference.Book GetBook(int id) {
            return base.Channel.GetBook(id);
        }
        
        public System.Threading.Tasks.Task<LibraryClient.LibraryServiceReference.Book> GetBookAsync(int id) {
            return base.Channel.GetBookAsync(id);
        }
        
        public void ReturnBook(int id) {
            base.Channel.ReturnBook(id);
        }
        
        public System.Threading.Tasks.Task ReturnBookAsync(int id) {
            return base.Channel.ReturnBookAsync(id);
        }
        
        public bool Exchange() {
            return base.Channel.Exchange();
        }
        
        public System.Threading.Tasks.Task<bool> ExchangeAsync() {
            return base.Channel.ExchangeAsync();
        }
        
        public void ExtendReservation(int id) {
            base.Channel.ExtendReservation(id);
        }
        
        public System.Threading.Tasks.Task ExtendReservationAsync(int id) {
            return base.Channel.ExtendReservationAsync(id);
        }
        
        public void Exit() {
            base.Channel.Exit();
        }
        
        public System.Threading.Tasks.Task ExitAsync() {
            return base.Channel.ExitAsync();
        }
    }
}
